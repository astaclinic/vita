job "mongo" {
  datacenters = ["[[ datacenter ]]"]

  group "mongo-a" {
    network {
      port "mongo-a" {
        static = 27017
        to     = 27017
      }
    }
    task "cluster-init" {
      driver = "docker"
      lifecycle {
        hook    = "poststart"
        sidecar = false
      }
      config {
        image = "ghcr.io/astaclinic/mongo-enterprise"
        auth {
          username = "[[ registry_username ]]"
          password = "[[ registry_password ]]"
        }
        args = [
          "sh", "local/init.sh"
        ]
      }
      template {
        data        = <<EOH
mongosh "mongodb://[[ mongodb_username ]]:[[ mongodb_password ]]@[[ ansible_eth0.ipv4.address ]]:27017" --eval "rs.status()"
RESULT=$?
if [ $RESULT -eq 0 ]; then
  echo "have inited before, exiting...";
  exit 0
else
  apt update -y
  apt install -y netcat
  while ! nc -z [[ ansible_eth0.ipv4.address ]] 27017 ; do sleep 1; done
  while ! nc -z [[ ansible_eth0.ipv4.address ]] 27018 ; do sleep 1; done
  while ! nc -z [[ ansible_eth0.ipv4.address ]] 27019 ; do sleep 1; done
  mongosh "mongodb://[[ mongodb_username ]]:[[ mongodb_password ]]@[[ ansible_eth0.ipv4.address ]]:27017" --eval "rs.initiate({ _id: \"rs0\", members: [{_id: 0, host: \"[[ ansible_eth0.ipv4.address ]]:27017\"},{_id: 1, host: \"[[ ansible_eth0.ipv4.address ]]:27018\"},{_id: 2, host: \"[[ ansible_eth0.ipv4.address ]]:27019\"}]});cfg = rs.conf();cfg.members[1].priority = 0;cfg.members[2].priority = 0;rs.reconfig(cfg)"
fi
EOH
        destination = "local/init.sh"
      }
    }
    task "mongo-a" {
      driver = "docker"
      service {
        provider = "nomad"
        check {
          type     = "tcp"
          name     = "mongodb_check"
          port     = "mongo-a"
          interval = "30s"
          timeout  = "3s"
        }
      }
      config {
        image = "ghcr.io/astaclinic/mongo-enterprise"
        ports = ["mongo-a"]
        auth {
          username = "[[ registry_username ]]"
          password = "[[ registry_password ]]"
        }
        args = [
          "--config", "/etc/mongo/mongod.conf", "--profile=2"
        ]
        volumes = [
          "/data/mongo-a/data:/data/db",
          "/data/mongo-a/config:/etc/mongo"
        ]
      }
      env {
        TZ                         = "Asia/Hong_Kong"
        MONGO_INITDB_ROOT_USERNAME = "[[ mongodb_username ]]"
        MONGO_INITDB_ROOT_PASSWORD = "[[ mongodb_password ]]"
      }
    }
  }


  group "mongo-b" {
    network {
      port "mongo-b" {
        static = 27018
        to     = 27017
      }
    }

    task "mongo-b" {
      driver = "docker"
      service {
        provider = "nomad"
        check {
          type     = "tcp"
          name     = "mongodb_check"
          port     = "mongo-b"
          interval = "30s"
          timeout  = "3s"
        }
      }
      config {
        image = "ghcr.io/astaclinic/mongo-enterprise"
        ports = ["mongo-b"]
        auth {
          username = "[[ registry_username ]]"
          password = "[[ registry_password ]]"
        }
        args = [
          "--config", "/etc/mongo/mongod.conf", "--profile=2"
        ]
        volumes = [
          "/data/mongo-b/data:/data/db",
          "/data/mongo-b/config:/etc/mongo"
        ]
        extra_hosts = [
          "0.gateway.asta.clinic:[[ ansible_eth0.ipv4.address ]]"
        ]
      }
      env {
        TZ                         = "Asia/Hong_Kong"
        MONGO_INITDB_ROOT_USERNAME = "[[ mongodb_username ]]"
        MONGO_INITDB_ROOT_PASSWORD = "[[ mongodb_password ]]"
      }
    }
  }

  group "mongo-c" {
    network {
      port "mongo-c" {
        static = 27019
        to     = 27017
      }
    }

    task "mongo-c" {
      driver = "docker"
      service {
        provider = "nomad"
        check {
          type     = "tcp"
          name     = "mongodb_check"
          port     = "mongo-c"
          interval = "30s"
          timeout  = "3s"
        }
      }
      config {
        image = "ghcr.io/astaclinic/mongo-enterprise"
        ports = ["mongo-c"]
        auth {
          username = "[[ registry_username ]]"
          password = "[[ registry_password ]]"
        }
        args = [
          "--config", "/etc/mongo/mongod.conf", "--profile=2"
        ]
        volumes = [
          "/data/mongo-c/data:/data/db",
          "/data/mongo-c/config:/etc/mongo"
        ]
        extra_hosts = [
          "0.gateway.asta.clinic:[[ ansible_eth0.ipv4.address ]]"
        ]
      }
      env {
        TZ                         = "Asia/Hong_Kong"
        MONGO_INITDB_ROOT_USERNAME = "[[ mongodb_username ]]"
        MONGO_INITDB_ROOT_PASSWORD = "[[ mongodb_password ]]"
      }
    }
  }
}